# This bash script is sourced by the various tools to set the
# adt_... variables and some other useful ones.

#---------- useful general functions ----------

fail () {
	echo >&2 "xenlvm: ${0##*/}: error: $*"
	exit 16
}

#---------- default values for simple settings ----------

adt_nominum=adt
adt_testbed_ram=256
adt_freeze_ram=32
adt_fs_size=1G
adt_fs_snapsize=100M
adt_fs_cowchunk=8
adt_playbase=/var/lib/autopkgtest/xenlvm
adt_fs_type=ext3
adt_fs_mkfs_args=''
adt_vm_reduce_retries=10
adt_ssh_keytype=dsa

adt_fw_localmirrors=''
adt_fw_prohibnets='192.168.0.0/24 172.16.0.0/12 10.0.0.0/8'
adt_fw_allowglobalports='80'

adt_guest_macaddr=00:16:3e:7c:aa:7f
adt_net_vifscript=/etc/xen/scripts/vif-route-adt

#---------- arguments and config file ----------

cmdline_args () {
	while [ $# -gt 0 ]; do
		arg="$1"
		case "$arg" in
		--*=*)
			value="${arg#*=}"

			var=${arg%%=*}
			var=${var#--}
			case "$var" in
			*-*)	var="$(printf "%s" "$var" | tr -- - _)" ;;
			esac
			var=${var#adt_}

			case $var in
			*) ;; # @@varlist@@
			*) fail "unknown configuration variable \`$var'" ;;
			esac

			eval "$var=\"\$value\""
			shift ;;

		--)	break ;;
		-*)	fail "unknown option \`$arg'" ;;
		*)	shift; break ;;
		esac
	done
	test $# = 0 || fail "non-option arguments not allowed"
}

cmdline_args
. ${adt_config}
cmdline_args

#---------- calculated defaults for complex settings ----------

case "$adt_lvm_vg" in
'')
	echo "searching for default volume group ..."
	vgdisplay_out=`vgdisplay -c`
	case "$vgdisplay_out" in
	"")	fail 'no volume groups found';;
	*"
"*)		fail 'several volume groups, config must specify which';;
	esac
	$adt_lvm_vg=${vgdisplay_out%%:*}
	echo "system has one volume group, $adt_vg, using that."
	;;
esac

case "$adt_kernel" in
'')
	echo "searching for kernel ..."
	for f in /boot/xen*"`uname -r`"; do
		test -f "$f" || continue
		test "x$adt_kernel" = x || \
			fail 'several kernels, config must specify which'
		adt_kernel="$f"
	done
	echo "... using currently booted kernel $adt_kernel"
	;;
esac

case "$adt_ramdisk" in
none)	echo "ramdisk \`none' specified, using static kernel"
	adt_ramdisk='' ;;
'')	adt_ramdisk="$adt_kernel.initrd.img"
	echo "using default ramdisk <kernel>.initrd.img, $adt_ramdisk" ;;
*)	;;
esac

case "$adt_modules" in
'')	/lib/modules/`uname -r` ;;
*)	;;
esac

case "$adt_distro" in
'')
	echo "considering which distro to use ..."
	test -f /etc/lsb-release || \
		fail 'no /etc/lsb-version, config must specify adt_distro'
	. /etc/lsb-release
	$adt_distro=$DISTRIB_CODENAME
	;;
esac

hostname_from_ipaddr () {
 eval '
  if [ x"$adt_'$1'_hostname" = x ] && \
     [ x"$adt_'$1'_ipaddr" != x ]; then
   echo "finding '$1' hostname from IP address $adt_'$1'_ipaddr"
   adt_'$1'_hostname=`adnshost -t ptr +Do +Dt +Dc -i $adt_'$1'_ipaddr`
  fi
 '
}

hostname_from_ipaddr guest
hostname_from_ipaddr host

if [ x"$adt_host_hostname" = x ]; then
	echo "finding host hostname, supposely our own FQDN ..."
	adt_host_hostname=`hostname -f`
fi

if [ x"$adt_guest_hostname" = x ]; then
	case "$adt_guests_domain" in
	'')	echo "guessing guest hostname from host hostname ..."
 adt_guest_hostname=$adt_distro.$adt_nominum.${adt_host_hostname#*.} ;;
	.*)	echo "setting guest hostname using distro and nominum ..."
 adt_guest_hostname=$adt_distro.$adt_nominum$adt_guests_domain ;;
	*)	echo "setting guest hostname using distro and domain ..."
 adt_guest_hostname=$adt_distro.$adt_guests_domain ;;
	esac
fi

ipaddr_from_hostname () {
 eval '
  if [ x"$adt_'$1'_ipaddr" = x ] && \
     [ x"$adt_'$1'_hostname" != x ]; then
   echo "finding '$1' IP address from hostname $adt_'$1'_hostname"
   adt_'$1'_ipaddr=`adnshost -t a +Do +Dt +Dc -i - "$adt_'$1'_hostname"`
  fi
 '
}

ipaddr_from_hostname guest
ipaddr_from_hostname host

: ${adt_config:=/etc/autopkgtest/xenlvm_${adt_nominum}_config}

# SSH
: ${adt_ssh_privkey:=/root/.ssh/id_${adt_ssh_keytype}_${adt_nominum}}
: ${adt_ssh_pubkey:=${adt_ssh_privkey}.pub}
: ${adt_ssh_keyident_args:=-i ${adt_ssh_privkey}}
: ${adt_ssh_keygen_args:=-t ${adt_ssh_keytype}}

# Xen
: ${adt_xmname:=${adt_nominum}_${adt_distro}}

# In-host-file-system playground
: ${adt_play:=${adt_playbase}/${adt_nominum}_${adt_distro}}
: ${adt_xmconfig:=${adt_play}/xmconfig}

# LVM
: ${adt_lvm_baselv:=${adt_nominum}_${adt_distro}_base}
: ${adt_lvm_cowdatalv:=${adt_nominum}_${adt_distro}_cowdata}
: ${adt_devmapper_cowdev:=${adt_nominum}_${adt_distro}_snap}

: ${adt_fslink_dir:=adt-xenlvm}
: ${adt_fslink_name:=${adt_nominum}_${adt_distro}_fs}

# Firewall
: ${adt_fw_testbedclients:=${adt_host_ipaddr}}

lvm_baselv_namerhs=${adt_vg}/${adt_lvm_baselv}
lvm_baselv_namepath=/dev/${adt_lvbaserhs}

lvm_cowdata_namerhs:=${adt_vg}/${adt_lvm_cowdatalv}
lvm_cowdata_namepath:=/dev/${lvm_cowdata_namerhs}

lvm_snapdev=/dev/mapper/${adt_devmapper_cowdev}

lvm_fslink_ptrrhs=${adt_fslink_dir}/${adt_fslink_name}
lvm_fslink_dirpath=/dev/${adt_fslink_dir}
lvm_fslink_ptr=/dev/${lvm_fslink_dir}/${adt_fslink_name}
