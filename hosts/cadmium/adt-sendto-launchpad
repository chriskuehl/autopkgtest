#!/usr/bin/perl

# formail < AUTOPKGTEST -s /net/anarres/slash/ubuntu/work/AutomatedTesting/autopkgtest--main/runner/adt-sendto-launchpad --mail

if ($ARGV[0] eq '--mail') {
    shift;
    $sm= open STDOUT, "|/usr/sbin/sendmail -oi -odb -oem -t";
    defined $sm or die $!;
}

while (<>) {
    if (s/^subject: //i) {
	s/^autopkgtest // or die "$_ ?";
	s/^(\w+) // or die "$_ ?";  $distro= $1;
	s/^([-+.0-9a-z]+)// or die "$_ ?";  $package= $1;
	if (m/^:/) {
	    $target= 'source';
	} elsif (m/^ (\w+)\:/) {
	    $target= $1;
	} else {
	    die "$_ ?";
	}
    }
    last if m/^$/;
}

$lphead= " affects /ubuntu/$package\n";

if ($target eq 'source') {
    $subject= "$distro/amd64: ftbfs / autopkgtest failure";
    $intro= '
An instance of autopkgtest (an automatic package testing system) has
found that this package either failed to build from source - or that
it declared some tests in its debian/tests/control and that at least
one of these tests failed.
';
} else {
    $subject= "$distro/$target: failed to install (autopkgtest)";
    $intro= '
An instance of autopkgtest (an automatic package testing system) has
found that this package did not successfully install.
';
}

$common= "
A human has briefly looked at the transcript and concluded that the
fault is a bug in the package or one of its build-dependencies.

The test environment is an amd64 Xen guest with limited amounts of
memory.  The relevant dependencies are installed for each test but
very few other packages.

The top and bottom of the mail sent by the autopkgtest instance to its
administrator is included below.  The full log can be found at
 http://autopkgtest.ubuntu.com/autopkgtest-output/$distro/$package/

";

$headers=
"To: new\@bugs.launchpad.net
Subject: $subject

";

for ($i=0; $i<7; $i++) { $top .= "| ".<>; }

for (;;) {
    defined($_= <>) or last;
    push @bot, "| ".$_;
    shift @bot if @bot > 50;
}

print $headers or die $!;

$body= $lphead.$intro. $common. $top. "...\n". join("",@bot);

open P, "|gpg -u0xc62ac3f4 --clearsign" or die $!;
print P $body;
$?=0; close P or die $!;
die $? if $?;

if (defined $sm) {
    $?=0; close STDOUT or die $!;
    die $? if $?;
}
