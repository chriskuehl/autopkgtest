.TH adt\-virt-lxc 1 2013 "Linux Programmer's Manual"
.SH NAME
adt\-virt\-lxc \- autopkgtest virtualisation server using LXC

.SH SYNOPSYS
.B adt\-virt\-lxc
.RI [ options ]
.I lxc\-container

.SH DESCRIPTION
.B adt-virt-lxc
provides an autopkgtest virtualisation server using LXC. It adapts the raw
functionality provided by the
.BR lxc- *
tools for use by autopkgtest.

Normally
.B adt-virt-lxc
will be invoked by
.BR adt-run .

You can conveniently create a suitable container using the
.BR adt-build-lxc (1)
script.

.SH REQUIREMENTS
.B adt-virt-lxc
assumes that you have already prepared a suitable Debian based LXC container.
See \fBlxc-create\fR(1) for how to create containers.

.SH OPTIONS

.TP
.BR -e " | " \-\-ephemeral
This option makes use of lxc-start-ephemeral to create temporary container
overlays, instead of the default behaviour of cloning your containers. This can
be used to dramatically improve performance, although you may see issues due to
the overlayfs filesystem as used by lxc-start-ephemeral not being completely
transparent (e. g. seen with tar failing when running LXC within Qemu). Before
using this option in automation you should ensure that tests that involve large
I/O work as expected.

.TP
.BR \-s " | " \-\-sudo
Run lxc-* commands through sudo; use this option if you run adt-run as normal
user, but need to run the container itself as root (if you use LXC system level
containers).

.TP
.B --eatmydata
This option is intended for test developer use. It enables the use of
\fBeatmydata\fR(1) inside the container on all commands in order to improve
performance. This requires
.BR eatmydata (1)
to already be installed inside the supplied template, which you will need to do
manually.

However, since eatmydata is not part of the dep8 specification and may affect
the test environment, it is not recommended for use in automation.

.TP
.BR \-d " | " \-\-debug
Enables debugging output.

.SH INPUT, OUTPUT AND EXIT STATUS
The behaviour of
.B adt-virt-lxc
is as described by the AutomatedTesting virtualisation regime
specification.

.SH NOTES

\fBadt-run\fR does not run \fBapt-get update\fR at the start of a package
build, which can cause a build failure if you are using a development release
template. You will need to run \fBapt-get update\fR in the template yourself
(e. g. using \fB\-\-setup\-commands\fR).

.SH EXAMPLE

Create a suitable debootstrap-based container for Debian or Ubuntu template, e.
g. a Debian sid one (will be named
.B adt-sid\fR):

.RS
.EX
adt-build-lxc debian sid
.EE
.RE

Or an Ubuntu one based on the cloud images (faster than adt-build-lxc's
"ubuntu" template with debootstrap, but much bigger):

.RS
.EX
lxc-create -t ubuntu-cloud -n \fIadt-trusty\fR -- -r trusty -d daily
.EE
.RE

Run tests against \fIhello_2.8\-4.dsc\fR, using the LXC container \fIadt-sid\fR,
and with an ephemeral overlay for speed:

.RS
.EX
adt-run \fIhello_2.8\-4.dsc\fR --- adt-virt-lxc -e \fIadt-sid\fR
.EE
.RE

.SH SEE ALSO
\fBadt\-run\fR(1),
\fBadt\-build-lxc\fR(1),
\fBlxc\-create\fR(1),
\fBeatmydata\fR(1),
\fB/usr/share/doc/autopkgtest/\fR.

.SH AUTHORS AND COPYRIGHT
.B adt-virt-lxc
was written by Robie Basak <robie.basak@canonical.com> and Martin Pitt
<martin.pitt@ubuntu.com>.

This manpage is part of autopkgtest, a tool for testing Debian binary
packages.  autopkgtest is Copyright (C) 2006-2013 Canonical Ltd and others.

See \fB/usr/share/doc/autopkgtest/CREDITS\fR for the list of
contributors and full copying conditions.
