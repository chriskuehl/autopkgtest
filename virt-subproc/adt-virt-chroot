#!/usr/bin/python3
#
# adt-virt-chroot is part of autopkgtest
# autopkgtest is a tool for testing Debian binary packages
#
# autopkgtest is Copyright (C) 2006-2007 Canonical Ltd.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
#
# See the file CREDITS for a full list of credits information (often
# installed as /usr/share/doc/autopkgtest/CREDITS).

import sys
import os
import argparse

try:
    our_base = os.environ['AUTOPKGTEST_BASE'] + '/lib'
except KeyError:
    our_base = '/usr/share/autopkgtest/python'
sys.path.insert(1, our_base)

import VirtSubproc
import adtlog


capabilities = []
chroot_dir = None


def parse_args():
    global chroot_dir

    parser = argparse.ArgumentParser(fromfile_prefix_chars='@')
    parser.add_argument('-r', '--gain-root', metavar='COMMAND',
                        help='can become root by prefixing commands with COMMAND')
    parser.add_argument('-d', '--debug', action='store_true',
                        help='Enable debugging output')
    parser.add_argument('chroot', metavar='=[dchroot]|/path/to/chroot')
    args = parser.parse_args()
    if args.debug:
        adtlog.verbosity = 2

    if args.chroot == '=':
        down = ['dchroot', '-q', '--']
        # FIXME: figure out chroot_dir
    elif args.chroot[0] == '=':
        down = ['dchroot', '-q', '-c', args.chroot[1:], '--']
        # FIXME: figure out chroot_dir
    elif args.chroot[0] == '/':
        down = ['chroot', args.chroot]
        chroot_dir = args.chroot
    else:
        parser.error("chroot spec must be =[DCHROOT] or /PATH/TO/CHROOT")

    if args.gain_root:
        down = args.gain_root.split() + down

    if args.gain_root or os.getuid() == 0:
        capabilities.append('root-on-testbed')

    VirtSubproc.auxverb = down


def hook_open():
    pass


def hook_downtmp():
    global capabilities
    d = VirtSubproc.downtmp_mktemp()
    if chroot_dir:
        capabilities.append('downtmp-host=%s/%s' % (chroot_dir, d))
    return d


def hook_cleanup():
    global capabilities
    VirtSubproc.downtmp_remove()
    capabilities = [c for c in capabilities if not c.startswith('downtmp-host')]


def hook_forked_inchild():
    pass


def hook_capabilities():
    return capabilities


parse_args()
VirtSubproc.main()
